.btn-group.sort-order-and-filter.pull-right{"aria-label" => "Sort and Filter", :role => "group"}
  .btn-group{:role => "group"}
    %button.sort-order-dropdown.btn.btn-default.dropdown-toggle{data: {sort_order: users_sort_orders[0][1]}, "aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", type: "button"}
      = users_sort_orders[0][0]
      %span.caret
    %ul.dropdown-menu
      - users_sort_orders.each do |label, value|
        %li
          %a{href: "#", class: 'sort-orders', data: {sort_order: value}}
            %i.fas.fa-check
            = label
  .btn-group{role: "group"}
    %button.filter-dropdown.btn.btn-default.dropdown-toggle{data: {filter: nil}, "aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", type: "button"}
      = t('filter.title')
      %span.filter-count
      %span.caret
    %ul.dropdown-menu.dropdown-menu-right
      - users_filters.each do |label, value|
        %li
          %a{href: "#", class: 'filters', data: {filter: value}}
            %input{type: 'checkbox'}
            = label

.clearfix

.empty-placeholders-wrapper{style: 'display: none;'}
  = render partial: 'timelines/empty_placeholder', locals: {menu_name: '', menu_or_users: 'users'}

.placeholders-wrapper
  - 3.times do
    = render partial: 'timelines/placeholder', locals: {menu_name: '', menu_or_users: 'users'}

.users-wrapper{style: 'margin-bottom: 15px;'}
  .main-content.twitter.users.row

.row.text-center{style: 'margin-bottom: 15px;'}
  .col-xs-6
    = link_to t('dictionary.see_more'), '#', data: {max_sequence: 0, limit: 3}, style: 'display: none;', onclick: 'return false;', class: 'see-more-btn btn btn-default btn-lg'
  .col-xs-6
    = link_to t('dictionary.see_at_once_more'), send("all_#{controller_name}_path", twitter_user), style: 'display: none;', class: 'see-at-once-btn btn btn-info btn-lg'

:javascript
  $(function () {
    var uid = '#{twitter_user.uid}';
    var url = '#{api_path}';
    var signInFromSortUrl = '#{sign_in_path(via: build_via('sort_btn'))}';
    var signInFromFilterUrl = '#{sign_in_path(via: build_via('filter_btn'))}';
    var signedIn = #{user_signed_in?};
    var $seeMoreBtn = $('.see-more-btn');
    var $seeAtOnceBtn = $('.see-at-once-btn');
    var $sortOrderDropdown = $('.sort-order-dropdown');
    var $filterDropdown = $('.filter-dropdown');
    var $placeholders = $('.placeholders-wrapper');
    var $emptyPlaceholders = $('.empty-placeholders-wrapper');
    var $usersContainer = $('.main-content.twitter.users');

    function fetchUsers (params) {
      console.log('params', params);

      var callback = function (res) {
        if (res.max_sequence && res.max_sequence >= 0) {
          $seeMoreBtn.data('max-sequence', res.max_sequence + 1);
          $seeMoreBtn.data('limit', 10);
        } else {
          // $seeMoreBtn.remove();
          // $seeAtOnceBtn.remove();
        }

        $placeholders.hide();
        var $users = $(res.users).hide().fadeIn(1000);
        $usersContainer.append($users);

        if ($usersContainer.find('.media').length <= 0) {
          $emptyPlaceholders.show();
        } else {
          $emptyPlaceholders.hide();
        }
      };

      var key = JSON.stringify(params);
      var cache = $.data(document.body, key);
      if (cache) {
        console.log('response(CACHE)', cache);
        callback(cache);
        return;
      }

      $.getJSON(url, params).done(function (res) {
        console.log('response', res);
        callback(res);
        $.data(document.body, key, res);
      });
    }

    $seeMoreBtn.on('click', function (e) {
      var params = {
        uid: uid,
        html: 1,
        limit: $(this).data('limit'),
        max_sequence: $(this).data('max-sequence'),
        sort_order: $sortOrderDropdown.data('sort-order'),
        filter: $filterDropdown.data('filter')
      };

      fetchUsers(params);
    });

    $sortOrderDropdown.parent().find('.dropdown-menu a').first().addClass('selected');
    $seeMoreBtn.show();
    $seeAtOnceBtn.show();
    $seeMoreBtn.trigger('click');

    if (signedIn) {
      var afterClick = function () {
        $seeMoreBtn.data('max-sequence', 0).data('limit', 3);
        $placeholders.show();
        $usersContainer.empty();
        $seeMoreBtn.trigger('click');
      };

      Twitter.enableSortButton($('.sort-order-dropdown'), afterClick);
      Twitter.enableFilterButton($('.filter-dropdown'), afterClick);
    } else {
      $('.sort-orders').attr('href', signInFromSortUrl);
      $('.filters').attr('href', signInFromFilterUrl);
    }
  });

