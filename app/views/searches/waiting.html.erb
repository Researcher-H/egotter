<%= render(partial: 'searches/profile_overview', locals: {searched_tw_user: @searched_tw_user}) %>

<div class="container waiting_msg" style="margin-top: 15px;">
  <%= t('dictionary.waiting', user: @searched_tw_user.name) %>&nbsp;<%= image_tag '/ajax-loader.gif' %>
</div>

<div class="container login_btn" style="display: none; margin-top: 15px;">
  <%= link_to t('dictionary.sign_in_with_twitter'), user_omniauth_authorize_path(:twitter),
              class: 'btn btn-lg btn-info btn-block', style: 'margin-top: 10px;' %>
</div>

<div class="container retry_btn" style="display: none; margin-top: 15px;">
  <%= link_to t('dictionary.retry_search_by', user: "@#{@searched_tw_user.screen_name}"),
              searches_path(screen_name: @searched_tw_user.screen_name),
              class: 'btn btn-lg btn-info btn-block', style: 'margin-top: 10px;', method: :post %>
</div>

<script>
  $(function () {
    var is_login = <%= user_signed_in? ? 'true' : 'false' %>;
    var waiting_msg = $('.waiting_msg');
    var retry_btn = $('.retry_btn');
    var login_btn = $('.login_btn');
    var interval = 2000;
    var max_interval = 5000;
    var retry_count = 0;
    var max_retry_count = 10;
    var too_many_requests = false;
    var unauthorized = false;
    var something_is_wrong = false;

    function tic() {
      $.post("<%= url_for waiting_path(screen_name: @searched_tw_user.screen_name, id: @searched_tw_user.uid) %>")
          .done(function (res) {
            console.log(res, interval);

            if (res.status) {
              interval *= 1000;
              window.location.replace("<%= search_path(screen_name: @searched_tw_user.screen_name, id: @searched_tw_user.uid) %>");
            } else {
              if (res.reason == '<%= BackgroundSearchLog::TooManyRequests %>') {
                too_many_requests = true;
              } else if (res.reason == '<%= BackgroundSearchLog::Unauthorized %>') {
                unauthorized = true;
              } else if (res.reason == '<%= BackgroundSearchLog::SomethingIsWrong %>') {
                something_is_wrong = true;
              } else {
                interval += 2000;
                if (interval > max_interval) {
                  interval = max_interval
                }
              }
            }
          });

      retry_count++;

      if (too_many_requests) {
        if (is_login) {
          waiting_msg.html('<%= t("after_sign_in.too_many_requests") %>');
          retry_btn.show();
        } else {
          waiting_msg.html('<%= t("before_sign_in.too_many_requests", sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
          login_btn.show();
        }
      } else if (unauthorized) {
        if (is_login) {
          waiting_msg.html('<%= t("after_sign_in.unauthorized") %>');
          retry_btn.show();
        } else {
          waiting_msg.html('<%= t("before_sign_in.unauthorized", sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
          login_btn.show();
        }
      } else if (something_is_wrong) {
        if (is_login) {
          waiting_msg.html('<%= t("after_sign_in.something_is_wrong") %>');
          retry_btn.show();
        } else {
          waiting_msg.html('<%= t("before_sign_in.something_is_wrong", sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
          login_btn.show();
        }
      } else {
        if (retry_count < max_retry_count) {
          setTimeout(tic, interval);
        } else {
          if (is_login) {
            waiting_msg.html('<%= t("after_sign_in.please_retry", user: @searched_tw_user.name) %>');
            retry_btn.show();
          } else {
            waiting_msg.html('<%= t("before_sign_in.please_retry", user: @searched_tw_user.screen_name, sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
            login_btn.show();
          }

        }
      }
    }

    tic();
  });
</script>