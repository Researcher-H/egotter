<%= render(partial: 'searches/profile_overview',
       locals: {user: @searched_tw_user, enable_carousel: true, unique_id: "#{@searched_tw_user.screen_name}_#{@searched_tw_user.object_id}"}) %>

<div class="waiting_msg" style="margin-top: 15px;">
  <%= t('dictionary.waiting', user: @searched_tw_user.name) %>&nbsp;<%= image_tag '/ajax-loader.gif' %>
</div>

<div class="progress_bar">
  <div class="progress" style="margin-top: 15px; margin-bottom: 0px;">
    <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
      <span class="sr-only">0% Complete</span>
    </div>
  </div>
</div>

<% if TwitterUser.exists?(uid: @searched_tw_user.uid, user_id: current_user_id) %>
  <div class="show_immediately_btn" style="margin-top: 15px;">
    <%= link_to t('dictionary.show_immediately'),
                search_path(screen_name: @searched_tw_user.screen_name, id: @searched_tw_user.uid),
                class: 'btn btn-lg btn-info btn-block' %>
  </div>
<% end %>

<div class="login_btn" style="display: none; margin-top: 15px;">
  <%= link_to t('dictionary.sign_in_with_twitter'), sign_in_path,
              class: 'btn btn-lg btn-info btn-block' %>
</div>

<div class="retry_btn" style="display: none; margin-top: 15px;">
  <%= link_to t('dictionary.retry_search_by', user: @searched_tw_user.mention_name), searches_path(screen_name: @searched_tw_user.screen_name),
              class: 'btn btn-lg btn-info btn-block', method: :post %>
</div>

<div class="support_btn" style="display: none; margin-top: 15px;">
  <%= link_to t('dictionary.link_to_support'), support_path,
              class: 'btn btn-lg btn-info btn-block' %>
</div>

<div class="error_msg" style="display: none; margin-top: 15px;">
</div>

<script>
  $(function () {
    var admin = <%= admin_signed_in? ? 'true' : 'false' %>;
    var is_login = <%= user_signed_in? ? 'true' : 'false' %>;
    var waiting_msg = $('.waiting_msg');
    var retry_btn = $('.retry_btn');
    var login_btn = $('.login_btn');
    var show_immediately_btn = $('.show_immediately_btn');
    var progress_bar = $('.progress_bar');
    var support_btn = $('.support_btn');
    var error_msg = $('.error_msg');
    var interval = 2000;
    var max_interval = 5000;
    var retry_count = 0;
    var max_retry_count = 10;
    var stop_waiting = false;

    function TooManyRequests() {
    }

    TooManyRequests.prototype = {
      show_msg: function () {
        show_immediately_btn.hide();
        progress_bar.hide();
        if (is_login) {
          waiting_msg.html('<%= t("after_sign_in.too_many_requests") %>');
          retry_btn.show();
          support_btn.show();
        } else {
          waiting_msg.html('<%= t("before_sign_in.too_many_requests", sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
          login_btn.show();
          support_btn.show();
        }
      }
    };

    function Unauthorized() {
    }

    Unauthorized.prototype = {
      show_msg: function () {
        show_immediately_btn.hide();
        progress_bar.hide();
        if (is_login) {
          waiting_msg.html('<%= t("after_sign_in.unauthorized", sign_out_link: link_to(t('dictionary.sign_out'), sign_out_path)).html_safe %>');
          retry_btn.show();
          support_btn.show();
        } else {
          waiting_msg.html('<%= t("before_sign_in.unauthorized", sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
          login_btn.show();
          support_btn.show();
        }
      }
    };

    function SomethingIsWrong() {
      this.res = null;
    }

    SomethingIsWrong.prototype = {
      show_msg: function () {
        show_immediately_btn.hide();
        progress_bar.hide();
        if (is_login) {
          waiting_msg.html('<%= t("after_sign_in.something_is_wrong") %>');
          retry_btn.show();
          support_btn.show();
          if (admin) {
            error_msg.show();
            if (this.res) {
              error_msg.text(this.res.message);
            }
          }
        } else {
          waiting_msg.html('<%= t("before_sign_in.something_is_wrong", sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
          login_btn.show();
          support_btn.show();
        }
      }
    };

    function Timeout() {
    }

    Timeout.prototype = {
      show_msg: function () {
        show_immediately_btn.hide();
        progress_bar.hide();
        if (is_login) {
          waiting_msg.html('<%= t("after_sign_in.retry_timeout", user: @searched_tw_user.name) %>');
          retry_btn.show();
          support_btn.show();
        } else {
          waiting_msg.html('<%= t("before_sign_in.retry_timeout", user: @searched_tw_user.screen_name, sign_in_link: link_to(t('dictionary.sign_in'), welcome_path)).html_safe %>');
          login_btn.show();
          support_btn.show();
        }
      }
    };

    function progress(value) {
      var random_int = function (min, max) {
        return Math.random() * (max - min) + min;
      };

      var bar = progress_bar.find('.progress-bar');
      if (!value) {
        value = parseInt(bar.attr('aria-valuenow'));
        if (value > 50) {
          value += random_int(5, 10);
        } else {
          value += random_int(10, 20);
        }
        if (value > 90) {
          value = 90;
        }
      }

      bar.css('width', value + '%').attr('aria-valuenow', value);
      bar.find('.sr-only').text(value + '% Complete');
    }

    show_immediately_btn.on('click', function () {
      stop_waiting = true;
      waiting_msg.html('<%= t("dictionary.show_immediately_msg", user: @searched_tw_user.name) %>&nbsp;<%= image_tag "/ajax-loader.gif" %>');
      show_immediately_btn.hide();
    });

    function find_error(res) {
      var error = null;
      if (res.reason == '<%= BackgroundSearchLog::TooManyRequests::MESSAGE %>') {
        error = new TooManyRequests();
      } else if (res.reason == '<%= BackgroundSearchLog::Unauthorized::MESSAGE %>') {
        error = new Unauthorized();
      } else if (res.reason == '<%= BackgroundSearchLog::SomethingError::MESSAGE %>') {
        error = new SomethingIsWrong();
        error.res = res;
      } else if (retry_count >= max_retry_count) {
        error = new Timeout();
      }
      return error
    }

    function tic() {
      $.get("<%= url_for background_search_log_path(id: @searched_tw_user.uid) %>")
          .done(function (res) {
            console.log(res, interval, retry_count);

            if (res.status == 200 && !stop_waiting) {
              stop_waiting = true;
              progress(95);
              show_immediately_btn.hide();
              waiting_msg.html('<%= t("dictionary.waiting_is_finished_msg") %>&nbsp;<%= image_tag "/ajax-loader.gif" %>');
              window.location.replace("<%= search_path(screen_name: @searched_tw_user.screen_name, id: @searched_tw_user.uid) %>");
              return
            }

            var error = find_error(res);
            if (error) {
              stop_waiting = true;
              error.show_msg();
              return
            }

            if (!stop_waiting) {
              progress();
              retry_count++;
              interval += 2000;
              if (interval > max_interval) interval = max_interval;
              setTimeout(tic, interval);
            }
          })
          .fail(function (xhr) {
            console.log(xhr.responseText);
            stop_waiting = true;
            new SomethingIsWrong().show_msg();
          });
    }

    tic();
  });
</script>