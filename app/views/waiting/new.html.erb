<%= render partial: 'twitter/profile', locals: {user: @twitter_user} %>

<div class="waiting-msg alert alert-info text-center">
  <%= t('.analyzing', user: @twitter_user.name) %>&nbsp;<%= image_tag '/ajax-loader.gif' %>
</div>

<div class="finished-msg alert alert-success text-center" style="display: none;">
  <%= t(".finished") %>&nbsp;<%= image_tag '/ajax-loader.gif' %>
</div>

<div class="error-msg alert alert-warning text-center" style="display: none;">
  <%= t('.something_wrong_html', url: sign_in_path(via: build_via('something_wrong'))) %>
</div>

<div class="row">
  <div class="hidden-xs hidden-sm col-md-2"></div>
  <div class="col-xs-12 col-sm-12 col-md-8">
    <div class="bar">
      <div class="progress" style="margin-bottom: 0;">
        <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
          <span class="sr-only">0% Complete</span>
        </div>
      </div>
    </div>
  </div>
  <div class="hidden-xs hidden-sm col-md-2"></div>
</div>

<div class="row">
  <div class="col-xs-12 col-sm-4 text-center">
    <div class="retry-btn" style="display: none; margin-bottom: 15px;">
      <%= link_to t('.retry_search_by', user: @twitter_user.mention_name), searches_path(screen_name: @twitter_user.screen_name, via: build_via('retry')), class: 'btn btn-lg btn-default', method: :post %>
    </div>
  </div>

  <div class="col-xs-12 col-sm-4 text-center">
    <div class="login-btn" style="display: none; margin-bottom: 15px;">
      <%= sign_in_with_twitter_link(nil, 'sign_in_button', class: 'btn btn-lg btn-info') %>
    </div>
  </div>

  <div class="col-xs-12 col-sm-4 text-center">
    <div class="support-btn" style="display: none; margin-bottom: 15px;">
      <%= link_to t('.link_to_support'), support_path(via: build_via), class: 'btn btn-lg btn-default' %>
    </div>
  </div>
</div>

<%= render(partial: 'adsense/side_by_side', locals: {vertical: :top}) %>

<script>
  $(function () {
    // If I don't adjust the time, the user won't be able to find a record when the job finishes before the page is loaded.
    var url = "<%= twitter_user_path(uid: @twitter_user.uid, created_at: Time.zone.now.to_i - 3, jid: @jid, via: build_via) %>";
    var resultPath = "<%= @redirect_path %>";
    var signedIn = <%= user_signed_in? %>;

    var $waitingMessage = $('.waiting-msg');
    var $finishedMessage = $('.finished-msg');
    var $errorMessage = $('.error-msg');
    var $retryBtn = $('.retry-btn');
    var $loginBtn = $('.login-btn');
    var $supportBtn = $('.support-btn');

    var progressBar = new ProgressBar();

    function check (path, interval, retryCount, successCallback, continueCallback, stopCallback, failedCallback) {
      $.get(path, {interval: interval, retry_count: retryCount})
        .done(function (res, textStatus, xhr) {
          if (xhr.status === 200) {
            successCallback(res);
          } else {
            if (retryCount < 10) {
              continueCallback(res);
              setTimeout(function () { check(path, interval, ++retryCount, successCallback, continueCallback, stopCallback, failedCallback); }, interval);
            } else {
              stopCallback(res);
            }
          }
        })
        .fail(function (xhr) {
          if (xhr.status === 404 && xhr.responseText && JSON.parse(xhr.responseText).hasOwnProperty('found')) {
            var res = JSON.parse(xhr.responseText);
            if (retryCount < 10) {
              continueCallback(res);
              setTimeout(function () { check(path, interval, ++retryCount, successCallback, continueCallback, stopCallback, failedCallback); }, interval);
            } else {
              stopCallback(res);
            }
          } else {
            failedCallback(xhr);
          }
        });
    }

    check(url, 3000, 0,
      function (res) {
        console.log('success', res);
        progressBar.set(95);
        $waitingMessage.hide();
        $finishedMessage.show();

        window.location.replace(resultPath);
      }, function (res) {
        console.log('continue', res);
        progressBar.advance();
      }, function (res) {
        console.log('stop', res);
        progressBar.hide();
        $waitingMessage.hide();
        $retryBtn.show();
        if (!signedIn) $loginBtn.show();
        $supportBtn.show();

        var timeOutMessage = '<%= t('.retry_timeout_html', url: sign_in_path(via: build_via('timeout'))).html_safe %>';
        $errorMessage.html(timeOutMessage).show();
      }, function (xhr) {
        console.log('failed', xhr.responseText);

        var res = $.parseJSON(xhr.responseText || null);
        progressBar.hide();
        $waitingMessage.hide();
        $retryBtn.show();
        if (!signedIn) $loginBtn.show();
        $supportBtn.show();

        if (res && res.message) {
          $errorMessage.html(res.message);
        }
          $errorMessage.show();
      });
  });
</script>
