.share-buttons
  .inner
    - tweet_text = t('unfriends.show.tweet', user: @twitter_user.mention_name, removing: @twitter_user.removing.size, removed: @twitter_user.removed.size, blocking_or_blocked: @twitter_user.blocking_or_blocked.size)
    - text = ".#{tweet_text} #egotter #unfriends #{unfriend_url(screen_name: twitter_user.screen_name)}"
    - onclick = "window.open(this.href, 'TwitterWindow', 'width=650, height=450, menubar=no, toolbar=no, scrollbars=yes'); return false;"
    %a.twitter-button{href: intent_url(text), onclick: onclick}
      %i.fa.fa-twitter.fa-lg{'area-hidden': true}
      %br
      %span.share-text Twitter

%ul.nav.nav-tabs.nav-justified{role: 'tablist'}
  %li.nav-item{class: ('active' if type == 'removing')}
    %a.nav-link{href: '#removing', role: 'tab', 'data-toggle' => 'tab'}
      = t('searches.removing.num', num: twitter_user.removing.size).html_safe
  %li.nav-item{class: ('active' if type == 'removed')}
    %a.nav-link{href: '#removed', role: 'tab', 'data-toggle' => 'tab'}
      = t('searches.removed.num', num: twitter_user.removed.size).html_safe
  %li.nav-item{class: ('active' if type == 'blocking_or_blocked')}
    %a.nav-link{href: '#blocking-or-blocked', role: 'tab', 'data-toggle' => 'tab'}
      = t('searches.blocking_or_blocked.num', num: twitter_user.blocking_or_blocked.size).html_safe

.tab-content.unfriends.twitter.users
  #removing.tab-pane{role: 'tabpanel', class: ('active' if type == 'removing')}
    .loading-image.text-center= image_tag '/ajax-loader.gif'
  #removed.tab-pane{role: 'tabpanel', class: ('active' if type == 'removed')}
    .loading-image.text-center= image_tag '/ajax-loader.gif'
  #blocking-or-blocked.tab-pane{role: 'tabpanel', class: ('active' if type == 'blocking_or_blocked')}
    .loading-image.text-center= image_tag '/ajax-loader.gif'

.shown-later{style: 'display: none;'}
  .unfriends.lead= t('unfriends.show.lead_003', user: twitter_user.mention_name).html_safe
  = render partial: 'unfriends/search_form', locals: {via: 'unfriends/show/bottom_input'}
  = render(partial: 'common/adsense', locals: {action: action_name, vertical: :bottom})
  .unfriends.lead= t('unfriends.show.lead_004')
  = link_to t('searches.common.search_xxx_by_egotter', user: twitter_user.mention_name), searches_path(screen_name: twitter_user.screen_name, via: 'unfriends/show/bottom_button'), class: 'btn btn-info btn-block', style: 'margin-bottom: 15px;', method: :post

  .unfriends.separator
  %h2.h4.text-center= t('searches.common.related_pages')
  %h2.h4.text-left
    = link_to t('searches.friends.title', user: twitter_user.mention_name), friends_search_path(screen_name: twitter_user.screen_name)
  %div{style: 'margin-bottom: 15px;'}
    = t('searches.friends.short_description')
  %h2.h4.text-left
    = link_to t('searches.followers.title', user: twitter_user.mention_name), followers_search_path(screen_name: twitter_user.screen_name)
  %div{style: 'margin-bottom: 15px;'}
    = t('searches.followers.short_description')
  %h2.h4.text-left
    = link_to t('searches.inactive_friends.title', user: twitter_user.mention_name), inactive_friends_search_path(screen_name: twitter_user.screen_name)
  %div{style: 'margin-bottom: 15px;'}
    = t('searches.inactive_friends.short_description')
  %h2.h4.text-left
    = link_to t('searches.inactive_followers.title', user: twitter_user.mention_name), inactive_followers_search_path(screen_name: twitter_user.screen_name)
  %div{style: 'margin-bottom: 15px;'}
    = t('searches.inactive_followers.short_description')
  %h2.h4.text-left
    = link_to t('searches.one_sided_friends.title', user: twitter_user.mention_name), one_sided_friend_path(screen_name: twitter_user.screen_name, type: 'one_sided_friends')
  %div{style: 'margin-bottom: 15px;'}
    = t('searches.one_sided_friends.short_description')
  %h2.h4.text-left
    = link_to t('searches.one_sided_followers.title', user: twitter_user.mention_name), one_sided_friend_path(screen_name: twitter_user.screen_name, type: 'one_sided_followers')
  %div{style: 'margin-bottom: 15px;'}
    = t('searches.one_sided_followers.short_description')
  %h2.h4.text-left
    = link_to t('searches.mutual_friends.title', user: twitter_user.mention_name), one_sided_friend_path(screen_name: twitter_user.screen_name, type: 'mutual_friends')
  %div{style: 'margin-bottom: 15px;'}
    = t('searches.mutual_friends.short_description')

- scope = {action: action_name, uid: twitter_user.uid}
:javascript
  $(function () {
    var url = "#{unfriend_path(screen_name: twitter_user.screen_name, type: 'TYPE', format: :json)}";
    var retryTimeout = '#{t('before_sign_in.retry_timeout', sign_in_link: link_to(t('dictionary.sign_in'), welcome_path(via: "#{controller_name}/#{action_name}/retry_timeout"))).html_safe}';
    var somethingWrong = '#{t('before_sign_in.something_is_wrong', sign_in_link: link_to(t('dictionary.sign_in'), welcome_path(via: "#{controller_name}/#{action_name}/something_wrong"))).html_safe}';
    var empty = "#{t('searches.common.empty_html')}";
    var type = "#{type.gsub(/_/, '-')}";
    var scope = #{scope.to_json};

  function fetchFirstUsers($tab, callback) {
    var selector = $tab.attr('href');

    $.get(url.replace('TYPE', selector.replace('#', '').replace(/-/g, '_')))
      .done(function (res) {
        if (res.empty) {
          $tab.data('present', false);
          $(selector).empty().append(empty);
        } else {
          $tab.data('present', true);
          $(selector).empty().append(res.html);
          callback();
        }
      })
      .fail(function (xhr) {
        if (xhr.status === 502) {
          Rollbar.scope(scope).warning("Timeout while attempting fetching.");
          $(selector).empty().append(retryTimeout);
        } else {
          $(selector).empty().append(somethingWrong);
        }
        console.log(xhr.responseText);
      });
  }

  var tab_clicked = function (e) {
    e.preventDefault();
    var $tab = $(this);
    var $box = $('.shown-later');
    if($tab.data('loaded')){
      if($tab.data('present')){
        $box.show();
      } else {
        $box.hide();
      }
    } else {
      $tab.data('loaded', true);
      $box.hide();
      fetchFirstUsers($tab, function () {
        $box.show();
        var path = window.location.pathname + window.location.search + '#loaded';
        window.history.replaceState(null, null, path)
      });
    }
  };

  $('a[href="#removing"]').on('click', tab_clicked);
  $('a[href="#removed"]').on('click', tab_clicked);
  $('a[href="#blocking-or-blocked"]').on('click', tab_clicked);

  $('a[href="#' + type + '"]').trigger('click');
  });