<%= render(partial: 'menu_items',
           locals: {searched_tw_user: @searched_tw_user,
                    menu_items: @menu_items,
                    menu_update_histories: @menu_update_histories,
                    menu_common_friends_and_followers: @menu_common_friends_and_followers,
                    close_friends: @menu_close_friends,
                    usage_stats: @menu_usage_stats,
                    clusters_belong_to: @menu_clusters_belong_to}) %>

<%= render(partial: 'searches/adsense_bottom') %>

<script>
<% if @job_id %>
  console.log('It needs to check for updates. <%= @job_id %>');

  $(function () {
    var created_at = <%= @searched_tw_user.created_at.to_i %>;
    var hash = null;
    var refresh_box = $('.alert.alert-info');
    var refresh_btn = refresh_box.find('a');

    refresh_btn.on('click', function (e) {
      refresh();
      e.preventDefault();
      e.stopPropagation();
      return false
    });

    function delete_cache(hash) {
      var url = "<%= raw page_cache_path(id: @searched_tw_user.uid, hash: 'HASH') %>";
      return $.ajax({url: url.replace(/HASH/, hash), type: 'DELETE'})
    }

    function create_cache() {
      var url = "<%= raw page_caches_path(id: @searched_tw_user.uid) %>";
      return $.post(url)
    }

    function refresh() {
      delete_cache(hash)
          .then(create_cache, failed)
          .done(window.location.reload)
          .fail(failed);
    }

    function interval_counter() {
      var cur = 2000;
      var max = 5000;

      return {
        cur: function () {
          return cur
        },
        next: function () {
          cur += 2000;
          if (cur > max) cur = max;
          return cur
        }
      }
    }
    var interval = interval_counter();

    function retry_counter() {
      var count = 0;
      var max = 5;

      return {
        cur: function () {
          return count
        },
        next: function () {
          count++;
          return count < max
        }
      }
    }
    var retry = retry_counter();

    function failed(xhr) {
      console.log(xhr.responseText);
    }

    function done(res, text_status, xhr) {
      console.log(res, text_status, xhr.status, interval.cur(), retry.cur());

      if (xhr.status == 200) {
        if (created_at < res.created_at) {
          hash = res.hash;
          refresh_box.show();
        } else {
          console.log('the result is latest.')
        }
      } else if (!retry.next()) {
        console.log('stop waiting');
      } else {
        setTimeout(tic, interval.next());
      }
    }

    function tic() {
      var url = "<%= background_search_log_path(id: @searched_tw_user.uid) %>";
      $.get(url).done(done).fail(failed);
    }

    tic();
  });
<% else %>
  console.log('It does not need to check for updates.');
<% end %>
</script>