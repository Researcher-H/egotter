#!/bin/sh

# https://cdyer.co.uk/blog/init-script-for-sidekiq-with-rbenv/
# /etc/init.d/sidekiq

if [ -f /etc/init.d/functions ]; then
  . /etc/init.d/functions
fi

if echo ' \c' | grep 'c' > /dev/null 2>&1; then
  en='-n'
  ec=''
else
  en=''
  ec='\c'
fi

APP_ROOT="/home/ec2-user/egotter/"
USER="ec2-user"
RAILS_ENV="production"
NAME="sidekiq_import"
TAG="egotter:${NAME}"
PID_FILE="${APP_ROOT}tmp/pids/${NAME}.pid"
CONFIG_FILE="${APP_ROOT}config/${NAME}.yml"

print_pid() {
  cat ${PID_FILE}
}

print_command() {
  ps -o command= -p $(print_pid)
}

is_stopped() {
  print_command | egrep -a "sidekiq [0-9]+\.[0-9]+\.[0-9]+ ${TAG} \[0 of [0-9]+ busy\] stopping" > /dev/null 2>&1
  return $?
}

is_running() {
  print_command | egrep -a "sidekiq [0-9]+\.[0-9]+\.[0-9]+ ${TAG} \[[0-9]+ of [0-9]+ busy\]" > /dev/null 2>&1
  return $?
}

start() {
  cd $APP_ROOT
  sudo -u ${USER} -H bash -l -c "cd $APP_ROOT && bundle exec sidekiq -e ${RAILS_ENV} -d -g ${TAG} -C ${CONFIG_FILE}"
  while [ ! -f ${PID_FILE} ]; do
    sleep 2
  done

  until checkpid $(print_pid); do
    sleep 2
  done

  echo ${en} "Starting $NAME: ${ec}"
  success
  echo
}

stop() {
  cd $APP_ROOT
  local pid=$(print_pid)

  sudo -u ${USER} -H bash -l -c "cd $APP_ROOT && bundle exec sidekiqctl quiet ${PID_FILE}"
  until is_stopped; do
    echo "waiting to be quiet: $(print_command)"
    checkpid ${pid} || break
    sleep 2
  done

  sudo -u ${USER} -H bash -l -c "cd $APP_ROOT && bundle exec sidekiqctl stop ${PID_FILE}"
  while checkpid ${pid}; do
    echo "waiting to stop: $(print_command)"
    sleep 2
  done

  echo ${en} "Stopping $NAME: ${ec}"
  success
  echo
}

force_stop() {
  if [ -f ${PID_FILE} ] && checkpid $(print_pid); then
    kill -USR1 $(print_pid) && sleep 3
  fi
  if [ -f ${PID_FILE} ] && checkpid $(print_pid); then
    kill -TERM $(print_pid) && sleep 3
  fi
  if [ -f ${PID_FILE} ] && checkpid $(print_pid); then
    kill -9 $(print_pid) && sleep 1
  fi

  [ -f ${PID_FILE} ] && rm ${PID_FILE}


  echo ${en} "Stopping $NAME: ${ec}"
  success
  echo
}

rh_status() {
  [ -f ${PID_FILE} ] && print_command
  status -p ${PID_FILE} ${NAME}
}

case "$1" in
  start)
          if [ -f ${PID_FILE} ]; then
            rh_status
            if checkpid $(print_pid); then
              :
            else
              rm ${PID_FILE}
              start
            fi
          else
            start
          fi
          ;;
  stop)
          if [ -f ${PID_FILE} ] && checkpid $(print_pid); then
            stop
          else
            rh_status
            [ -f ${PID_FILE} ] && rm ${PID_FILE}
          fi
          ;;
  restart)
          if [ -f ${PID_FILE} ] && checkpid $(print_pid); then
            stop
          else
            rh_status
            [ -f ${PID_FILE} ] && rm ${PID_FILE}
          fi

          start
          ;;
  force-stop)
          force_stop
          ;;
  force-restart)
          force_stop
          start
          ;;
  status)
          rh_status
          ;;
  *)
          echo "Usage: sidekiq {start|stop|restart|status}" >&2
          exit 1
          ;;
esac
exit 0
